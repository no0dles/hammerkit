name: master
on: [push]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/cache@v2
        with:
          key: build-${{ github.ref }}-${{ github.sha }}
          path: ~/.cache
          restore-keys: |
            build-${{ github.ref }}-
      - uses: no0dles/hammerkit-github-action@v1.3
      - run: hammerkit restore ~/.cache
      - run: hammerkit lint
      - run: hammerkit prettier
      - run: hammerkit build
      - run: hammerkit store ~/.cache
  docker:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: no0dles/hammerkit-github-action@v1.3
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes; docker buildx create --use
      - run: hammerkit build:docker
        env:
          IMAGE_TAG: latest
  test:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          key: test-${{ github.ref }}-${{ github.sha }}
          path: ~/.cache
          restore-keys: |
            test-${{ github.ref }}-
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: no0dles/hammerkit-github-action@v1.3
      - run: hammerkit restore ~/.cache
      - run: hammerkit test
      - run: hammerkit store ~/.cache
      - name: upload coverage
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info

  publish-docker:
    runs-on: ubuntu-18.04
    needs: [test, docker]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: no0dles/hammerkit-github-action@v1.3
      - name: Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF:11}
      - run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes; docker buildx create --use
      - run: hammerkit publish:docker --verbose
        env:
          IMAGE_TAG: ${{ steps.version.outputs.VERSION }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          DOCKER_USERNAME: no0dles

  publish-binaries:
    runs-on: ubuntu-18.04
    needs: [ test, build ]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: no0dles/hammerkit-github-action@v1.3
      - name: build
        run: hammerkit build
      - name: package
        run: node_modules/.bin/pkg --no-bytecode -t node14-linux-x64,node14-linux-arm64,node14-macos-x64,node14-macos-arm64,node14-win-x64,node14-win-arm64 .
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-linux-arm64
          asset_name: hammerkit-linux-arm64
          asset_content_type: application/octet-stream
      - name: upload linux x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-linux-x64
          asset_name: hammerkit-linux-x64
          asset_content_type: application/octet-stream
      - name: upload macos arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-macos-arm64
          asset_name: hammerkit-macos-arm64
          asset_content_type: application/octet-stream
      - name: upload macos x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-macos-x64
          asset_name: hammerkit-macos-x64
          asset_content_type: application/octet-stream
      - name: upload win arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-win-arm64.exe
          asset_name: hammerkit-win-arm64.exe
          asset_content_type: application/octet-stream
      - name: upload win x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-win-x64.exe
          asset_name: hammerkit-win-x64.exe
          asset_content_type: application/octet-stream

  publish-npm:
    runs-on: ubuntu-18.04
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: no0dles/hammerkit-github-action@v1.3
      - run: hammerkit publish:npm --verbose
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
