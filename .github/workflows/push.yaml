name: publish
on:
  push:
    tags:
      - v*
jobs:
  docker:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF:11}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - run: echo $DOCKER_TOKEN | docker login --username no0dles --password-stdin
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push image
        run: docker buildx build . --platform linux/arm64,linux/amd64 -t no0dles/hammerkit -t no0dles/hammerkit:$IMAGE_TAG --push
        env:
          IMAGE_TAG: ${{ steps.version.outputs.VERSION }}

  binaries:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Set Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF:11}
      - name: Install npm packages
        run: npm ci
      - run: node_modules/.bin/tsc
      - name: Build binaries
        run: node_modules/.bin/pkg --no-bytecode -t "node14-linux-x64,node14-linux-arm64,node14-macos-x64,node14-macos-arm64,node14-win-x64,node14-win-arm64" .
      - name: Create release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-linux-arm64
          asset_name: hammerkit-linux-arm64
          asset_content_type: application/octet-stream
      - name: upload linux x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-linux-x64
          asset_name: hammerkit-linux-x64
          asset_content_type: application/octet-stream
      - name: upload macos arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-macos-arm64
          asset_name: hammerkit-macos-arm64
          asset_content_type: application/octet-stream
      - name: upload macos x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-macos-x64
          asset_name: hammerkit-macos-x64
          asset_content_type: application/octet-stream
      - name: upload win arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-win-arm64.exe
          asset_name: hammerkit-win-arm64.exe
          asset_content_type: application/octet-stream
      - name: upload win x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hammerkit-win-x64.exe
          asset_name: hammerkit-win-x64.exe
          asset_content_type: application/octet-stream

  npm:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Set Version
        id: version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF:11}
      - name: Install npm packages
        run: npm ci
      - name: Publish package
        run: npm publish --tag beta
        if: contains(steps.version.outputs.version, 'beta')
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish package
        run: npm publish
        if: "!contains(steps.version.outputs.version, 'beta')"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
