name: test
on:
  push:
    branches:
      - '**'
jobs:
  linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        node: [ 20 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Setup docker
        uses: docker-practice/actions-setup-docker@master
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0
      - name: Test
        run: |
          kubectl cluster-info
          kubectl get nodes
      - name: Install npm packages
        run: npm ci
      - name: Run tests
        run: node_modules/.bin/jest --runInBand
        timeout-minutes: 15
        env:
          VERBOSE: true
          CLUSTER_NAME: kind-chart-testing
      - name: Archive test artifacts
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: console-log
          path: |
            logs
      - name: Upload coverage
        uses: codacy/codacy-coverage-reporter-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage/lcov.info

  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-2022 ]
        node: [ 20 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Install npm packages
        run: npm ci
      - name: Run tests
        run: node_modules/.bin/jest --runInBand
        timeout-minutes: 15
        env:
          VERBOSE: true

  macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-12 ]
        node: [ 16 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup node ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Setup docker
        uses: docker-practice/actions-setup-docker@master
      - name: Install npm packages
        run: npm ci
      - name: Pull postgres test image
        run: docker pull postgres:12-alpine
      - name: Pull node image
        run: docker pull node:16.6.0-alpine
      - name: Run tests
        run: node_modules/.bin/jest --runInBand
        timeout-minutes: 15
        env:
          VERBOSE: true
      - name: Archive test artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: console-log
          path: |
            logs
